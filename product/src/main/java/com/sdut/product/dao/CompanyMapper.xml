<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sdut.product.dao.CompanyMapper" >
  <resultMap id="BaseResultMap" type="com.sdut.product.pojo.Company" >

    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="website" property="website" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, phone, fax, mail, website, address, introduction, picture
  </sql>

  <select id="selectCompanyAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company
    <if test="str !='' " >
      where id like #{str} or name like #{str}
    </if>

  </select>

  <select id="selectCompanyCount" resultType="java.lang.Integer">
    select count(*) from company
    <if test="str != ''" >
      where id like #{str} or name like #{str}
    </if>
  </select>

  <select id="selectById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company
    where id= (select company_id from product_company where product_id = #{id})
  </select>

  <insert id="insertCompany" parameterType="com.sdut.product.pojo.Company" >
    insert into company (name, phone, fax, mail, website, address, introduction, picture)
    values (#{name},#{phone},#{fax},#{mail},#{website},#{address},#{introduction},#{picture})
  </insert>

  <update id="updateCompany">
     update company
     set name = #{name},phone = #{phone},fax = #{fax},mail = #{mail},website = #{website},
      address = #{address}, introduction = #{introduction},picture = #{picture}
    where id = #{id}
  </update>


  <delete id="deleteById" >
    delete from company
    where id = #{id}
  </delete>

  <delete id="deleteByIds" >
    delete from company
    where id in (${ids})
  </delete>

</mapper>